{
  "articles": [
    {
      "path": "0-Por_que_R.html",
      "title": "Por que R?",
      "description": "Vantagens e Desvantagens de R e porque usá-lo.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nR vs Python\nR vs Julia\nVantagens de R\nProdutivo (Análises/hora)\nEficaz (Conseguir usar a ferramenta correta dentre um rol de inúmeras)\nComunicativo (Maioria das ciências aplicadas usam R)\nReplicável e Transparente\n\n\n\nHá tantas linguagens de programação por aí: “Por que devo escolher R?” “E Python?” “Ouvi falar que Python é melhor que R.” “Julia é melhor que Python e R,”… Estas são as diversas perguntas e dúvidas que nos são endereçadas quando começamos a abordar R com alunos e pesquisadores. Se você quer a resposta curta (TL;DR1 como é chamado ultimamente) é esta:\n\nVocê consegue praticar Estatística com qualquer linguagem obscura que dê um suporte mínimo a operações matriciais.\n\n\nAqui usamos Estatística quando nos referimos a disciplina e estatística quando nos referimos a uma métrica dos dados\nEntão, se você quiser “fazer Estatística” com COBOL, LISP ou qualquer outra coisa fique a vontade… Não vamos te impedir. Agora se você quer “fazer Estatística” sendo:\nProdutivo (Análises/hora)\nEficaz (Conseguir usar a ferramenta correta dentre um rol de inúmeras)\nComunicativo (Maioria das ciências aplicadas usam R)\nReplicável (Com as configurações corretas, sua análise sempre será a mesma)\nTransparente (Não tem como se esconder atrás de opensource)\nEntão, acreditamos que o R é a escolha certa\nPrimeiramente, abordaremos o R versus outras duas linguagens muito usadas para dados: Python e Julia. E na sequência, explanaremos essas 5 características de R.\nR vs Python\nEssa é uma briga boa. Acreditamos que não há um vencedor. Ambas são muito boas para certos fins. Primeiramente as semelhanças:\nAmbas são linguagens lentas e tudo que é rapido é rodado em C/C++ ou Fortran2 com wrappers convenientes.\nAmbas são amplamente usadas para análise de dados e possuem bibliotecas especializadas para certas operações.\nAmbas possuem uma comunidade ativa de usuários e contribuidores.\nAmbas são opensource e gratuitas3.\nAgora as diferenças. Essa é a parte mais interessante e sem dúvida desencadeia muito hate mail4:\nR é mais voltada para o paradigma de programação funcional, enquanto Python é mais voltado para o paradigma de programação orientada a objetos\nR é feito por estatísticos para estatísticos. Dados tabulares e funções estatísticas são “cidadãos de primeira-classe.” Python teve que sofrer (e ainda sofre) muita gambiarra customizações para conseguirem trabalhar com dados tabulares e funções estatísticas.\nR é mais interoperacional que Python. Com o R conseguimos exportar a aproveitar resultados de uma biblioteca em outra por meio de objetos data.frame. Com o Python, isto é mais complicado e interoperabilidade envolve martelar transformar objetos oriundos de uma biblioteca em classes comuns de Python ou em tipos de arquivos comuns (JSON, CSV etc.)\nR é mais usado pelos cientistas e estatísticos5.\nR possui mais bibliotecas e maneiras de se analisar estatisticamente dados que Python. Maioria das novas inovações em métodos estatísticos oriundos de teses e artigos são também escritos em bibliotecas de R e publicados.\nR não é muito bom para Deep Learning (Aprendizagem Profunda). A maioria dessas bibliotecas são focadas em Python. Mas quando falamos de Machine Learning, tanto R quando Python possuem o mesmo potencial.\nR não tem list comprehension (compreensão de listas), enquanto Python tem.\n\nQuando falamos Deep Learning estamos no referindo à Redes Neurais com diversas camadas. E Machine Learning à modelos estatísticos que o intuito é poder preditivo.\nR vs Julia\nCom as grandes diferenças entre Python e R apresentadas, precisamos falar de Julia. Julia é uma linguagem nova oriunda do MIT que está sendo muito usada para computação científica. O quê muda com Julia?\nJulia é rápida. E quando eu digo rápida, eu quero dizer bem rápida. Julia trabalha em cima do LLVM(Low Level Virtual Machine) que é um compilador universal e usa uma abordagem JIT (Just-in-Time) de compilação de código que faz com que seja às vezes 100x mais rápida que R ou Python para algumas operações6.\nJulia permite usarmos caracteres unicode como variáveis no código. Isso quer dizer que eu consigo escrever em Julia algo como µ = 0 e em Python/R seria escrito mu = 0. Para matemáticos e cientistas isso permite com o que o código fique mais inteligível.\nJulia ainda é muito nova e não há bibliotecas para todas as coisas que conseguimos fazer com Python e R.\nJulia, assim como Python, possui list comprehension (compreensão de listas).\nJulia é uma linguagem que estamos olhando de maneira promissora. Ela é rápida, já é adotada pela comunidade científica, possui um paradigma funcional e permite uma melhor inteligibilidade do código ao permitir o uso de caracteres unicode e símbolos matemáticos7.\nA principal lacuna que a linguagem Julia tenta solucionar é o paradigma das duas linguagens. Esse paradigma é como os desenvolvedores de algoritmos e softwares de análise desenvolvem suas funcionalidades. Primeiro o código é escrito em uma linguagem de fácil entendeimento e rápida prototipagem como R ou Python. Então, o código do protótipo é testado com um problema pequeno ou com uma fração dos dados que serão utilizados pela solução final. Somente após averiguar que o protótipo funciona da maneira correta, é que os desenvolvedores partem para uma linguagem mais robusta e rápida, mas de implementação demorada como C++ ou Fortran. Julia serve para eliminar esse paradigma e ser a linguagem usada tanto para prototipagem quando para implementação.\nAcreditamos que ainda é necessário no mínimo 5 anos para sabermos qual será o real potencial da linguagem Julia. O nosso conselho é usar R para suas análises estatísticas e considerar Julia se precisar de algo mais incomum que necessite de computação intensa que não tenha ainda uma implementação rápida em R ou Python (usando C/C++ ou Fortran).\nVantagens de R\nCom essas diferenças e semelhanças com Python e Julia, é hora de retornarmos aquelas nossas 5 características que mostramos.\nProdutivo (Análises/hora)\nCom R, conseguimos nos aproveitar do paradigma de programação funcional e sermos mais produtivos (além que o código fica muito mais inteligível). Veja um exemplo abaixo com R e Python. Estamos pegando um dataset chamado mtcars que possui informações sobre alguns carros. Aqui serão feitas algumas operações sequenciais:\nTransformar variáveis que contém texto em variáveis categóricas8\nFiltrar somente as observações que tenham hp maior que 100\nCalcular a média somente para as variáveis númericas\nPrimeiro o R, veja como o código é muito mais sucinto e simples de ler. O pipe %>% significa “pegue o resultado dessa operação e jogue como input da próxima.” Aqui estamos usando o pacote {dplyr} do {tidyverse}.\n\n\nmtcars %>% \n  mutate_if(is.character, as.factor) %>% \n  filter(hp > 100) %>% \n  summarise_if(is.numeric, mean)\n\n\n\nAgora com Python usando a biblioteca {pandas}. Como a lógica de Python é orientada a objetos eu tenho que acessar as funções e atributos de um objeto usando um ponto . após o objeto. Exemplos: objeto.atributo ou objeto.funcao(). Aqui estou fazendo diversas operações em um objeto chamado mtcars que é o nosso dataset. Quase todas operações do {pandas} em um dataset resultam em um novo dataset transformado. Aqui é muito mais complicado porque eu preciso encadear diversas operações usando funções de um objeto. Sem o paradigma funcional (e em especial o pipe %>%) o código fica muito mais verboso e não tão inteligível.\n\nmtcars.select_dtypes(\n  ['object']).apply(\n    lambda x: x.astype('category')).query(\n      'hp > 100').select_dtypes(\n        ['number']).mean()\n\nNós preferimos usar o R para manipular e transformar dados, não só porque a síntaxe é melhor, mas também porque há muito mais funções e operações criadas para diversos tipos de manipulações. No universo das bibliotecas do {tidyverse} temos os chamados core packages:\n{readr} – Leitura de dados de diversos tipos de arquivos\n{tidyr} – Coerção de dados em formatos diversos para um formato tabular\n{dplyr} – Manipulação e transformação de dados tabulares\n{ggplot2} – Gráficos\n{stringr} – Manipulação de dados textuais\n{forcats} – Manipulação de dados qualitativos\n{purrr} – Programação funcional\nAlém disso, há as bibliotecas auxiliares\n{readxl} – Leitura de dados de tabelas Excel\n{haven} – Leitura de dados de tabelas SPSS e Stata\n{DBI} e {dbplyr} – Leitura de dados de Banco de Dados e tradução de operações usando linguagem R e verbos do {tidyverse}9 em operações usando linguagem SQL\n{rvest} e {httr} – Raspagem de dados da Web\nTodas esses bibliotecas rodam em C/C++ e por isso são bem rápidos e eficientes. Além disso, vale a pena mecionar todo o universo {tidymodels} que é um ecossistema para modelagem e machine learning com R.\nEficaz (Conseguir usar a ferramenta correta dentre um rol de inúmeras)\nAtualmente o CRAN10 possui um total de 16,837 bibliotecas11. Todas opensource e gratuitas. Quase toda grande inovação em Estatística em diversos campos são publicadas como bibliotecas de R. A incorporação de novas ferramentas ao rol do estatístico no ecossistema do R é muito mais simples e fácil por conta da interoperabilidade proporcionada pelo objeto universal básico de R que é o data.frame. Tal funcionalidade é incorporada na linguagem em si, qualquer versão de R (desde os primórdios da década de 90) já tinha esse objeto para representar dados tabulares.\nAlém de bibliotecas para análises de dados e Rstatística de maneira geral. Temos ecossistemas e bibliotecas para campos distintos como por exemplo12:\nEstatística Bayesiana\nEnsaios Clínicos\nFinanças\nEconomia\nDados Geospaciais\nAnálise de Sobreviência\nSéries Temporais\nGenoma e Genética\nConstrução e Validação de Escalas\nComunicativo (Maioria das ciências aplicadas usam R)\nDurante o processo de avaliação-por-pares que as publicações científicas passam para serem publicadas, muitos editores e revisores pedem aos autores que submetam ou mostrem o código usado para analisar os dados. Isto é feito para averiguar se a análise foi feita de maneira correta. E a maioria dessas análises no mundo das ciências aplicadas, em especial a área de ciências sociais aplicadas13, usam o R.\nAlém disso, com a biblioteca {rmarkdown} e seus diversos templates, é possível criar diversos tipos de documentos14:\nDocumentos:\nHTML com CSS usando Bootstrap\nPDF\nWord\nRTF\nODT\n\nApresentações (slides):\nioslides\nBeamer\nSlidy\nPowerPoint\n\nArtigos formatados para certos periódicos usando os templates da biblioteca {rticles}\nDashboards\nLivros\nWebsites\nBlogs\nCurriculum Vitae\nReplicável e Transparente15\nA ciência está passando por uma crise de credibilidade que no fundo é também uma crise de replicabilidade. Um livro muito que recomendamos para entender esta crise da ciência é o “Science Fictions: How Fraud, Bias, Negligence, and Hype Undermine the Search for Truth” de Stuart Ritchie (Ritchie, 2020)16. Uma das vantagens do R é que com o mesmo código e o mesmo conjunto de dados, dois usuários conseguem chegar na mesma análise e resultados. Claro que R não soluciona todo o problema de replicabilidade da ciência. Mas, código aberto, e se possível, dados abertos, já ajudam bastante…\n\n\nIoannidis, J. P. (2005). Why most published research findings are false. PLoS Medicine, 2(8), e124.\n\n\nRitchie, S. (2020). Science fictions: Exposing fraud, bias, negligence and hype in science. Random House.\n\n\nToo Long, Didn’t Read, traduzindo Muito Grande, Não Li↩︎\nSciPy roda em C/C++ e Fortran, NumPy em C/C++, todo o tidyverse roda em C++, etc↩︎\nÓbvio, mas é bom enfatizar.↩︎\nNotem que estas são nossas opiniões. E como não casamos com opiniões, casamos com fatos (afinal somos estatísticos): uma vez que os fatos mudam, nossas opiniões mudarão de acordo.↩︎\nClaro que em alguns campos (ex: ciências da computação), Python é muito mais utilizado.↩︎\nQuando Python e R usam C/C++ ou Fortran essa vantagem cai bastante ou é inexistente.↩︎\nPara o leitor isso não pode fazer diferença. Mas quando você, por exemplo, quer pegar um algoritmo descrito matematicamente em um artigo e implementá-lo diretamente em código, esses caracteres matemáticos são muito bem-vindos. Palavras de quem já escreveu um algoritmo de Amostragem Monte Carlo usando correntes Markov na mão (não por falta de opção, mas por busca de sinestesia para melhor aprendizagem).↩︎\nVariáveis categóricas são conhecidas como factors no R e são maneiras eficientes de manipular e armazenar dados não-numéricos. Geralmente dados não-numéricos são dados textuais ou alguma chave de identificação unica (tipo um id).↩︎\nAqui você já viu alguns em ação: mutate(), filter() e summarise()↩︎\nCRAN – Comprehensive R Archive Network, repositório global de bibliotecas de R.↩︎\nDados de 25/12/20.↩︎\nPara ver uma lista curada pelo CRAN de bibliotecas por assunto vá em CRAN Task Views.↩︎\nDa qual, nós somos oriundos.↩︎\nEste documento é um exemplo. Usamos a biblioteca {distill} que é focada para escrita científica e técnica.↩︎\nNão é uma característica única do R, mas de qualquer linguagem que possua suporte básico a análise e manipulação de dados.↩︎\nHá um metacientista (cientista que estuda a ciência) chamado John Ioannidis que possui diversas publicações interessantes sobre a crise atual da ciência. Em especial, há um artigo de 2005 intitulado “Why Most Published Research Findings Are False” publicado na PLOS Medicine (Ioannidis, 2005) que merece atenção do leitor.\n\n↩︎\n",
      "last_modified": "2020-12-25T18:12:39-03:00"
    },
    {
      "path": "1-Comandos_Basicos.html",
      "title": "Comandos Básicos de R",
      "description": "Introdução ao R e aos comandos básicos do R.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nLendo Arquivos\nCSV\nExcel\n\nGráficos\nAmbiente\n\n\nEste arquivo é um documento R Markdown Quando você executa um código nesse documento os resultados aparecem abaixo do código.\nPara executar um código clique no botão Run (play em cor verde) ou coloque o seu cursos dentro do código e aperte Ctrl+Shift+Enter.\n\n\nprint(\"Você executou um código\")\n\n\n[1] \"Você executou um código\"\n\nVocê pode adicionar um novo código clicando no botão Insert Chunk na toolbar ou apertando Crtl+Alt+I.\nQuando você salva esse notebook, um arquivo HTML contendo o código e os resultados será salvo junto com ele (clique no botão Preview ou aperte Crtl+Shift+K para visualizar o arquivo HTML).\nEssa visualização mostra uma copia renderizada em HTML do editor do R. Ao contrário do botão Knit, Preview não executra nenhum código de R. Ele apenas exibe o output do código quando foi executado a última vez. Além disso, o botão Knit permite com que você renderize o documento como HTML, PDF ou Word.\nLendo Arquivos\nCSV\nPara ler um arquivo CSV (.csv) no R execute a função read.csv() para arquivos CSV formato americano (vírgula como separador e decimais como ponto) ou a função read.csv2() para arquivos CSV formato europeu/brasileiro (ponto-e-vírgula como separador e decimais como vírgula). Não esqueça de designar a leitura para uma variável com o designador <-.\n\n\ndf <- read.csv2(\"datasets/mtcars.csv\", row.names = 1)\nhead(df)\n\n\n                  mpg cyl disp  hp drat  wt qsec vs am gear carb\nMazda RX4          21   6  160 110  3.9 2.6   16  0  1    4    4\nMazda RX4 Wag      21   6  160 110  3.9 2.9   17  0  1    4    4\nDatsun 710         23   4  108  93  3.9 2.3   19  1  1    4    1\nHornet 4 Drive     21   6  258 110  3.1 3.2   19  1  0    3    1\nHornet Sportabout  19   8  360 175  3.1 3.4   17  0  0    3    2\nValiant            18   6  225 105  2.8 3.5   20  1  0    3    1\n\nExcel\nPara ler um arquivo Excel (.xls ou .xlsx) no R é necessário importar um pacote chamado readxl que contem a função read_excel. Para importar um pacote no R executamos o comando library() com um argumento único sendo o nome do pacote. Caso não tenha o pacote instalado, deve instalar ele com o comando install.packages(). Não esqueça de colocar o nome do pacote entre aspas \"nome_do_pacote\" dentro do parênteses da função.\n\n\n# install.packages(\"readxl\")\nlibrary(readxl)\ndf <- read_excel(\"datasets/mtcars.xlsx\")\nhead(df)\n\n\n# A tibble: 6 x 12\n  ...1       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear\n  <chr>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Mazda R…  21       6   160   110  3.9   2.62  16.5     0     1     4\n2 Mazda R…  21       6   160   110  3.9   2.88  17.0     0     1     4\n3 Datsun …  22.8     4   108    93  3.85  2.32  18.6     1     1     4\n4 Hornet …  21.4     6   258   110  3.08  3.22  19.4     1     0     3\n5 Hornet …  18.7     8   360   175  3.15  3.44  17.0     0     0     3\n6 Valiant   18.1     6   225   105  2.76  3.46  20.2     1     0     3\n# … with 1 more variable: carb <dbl>\n\nGráficos\nGeralmente no R você pode plotar diversos objetos (variáveis do ambiente) com o comando plot(). Quando você plota um dataset (conjunto de dados lido de um aquivo), o R retorna um gráfico chamado Pair Plot:\nNa diagonal: nome da variável (coluna do dataset)\nFora da diagonal: um gráfico de dispersão entre a variável no eixo horizontal e a variável no eixo vertical\nExemplo: Veja a relação entre disp (cilindrada) e hp (cavalos de potência). Ela é uma relação positiva. Quanto maior disp maior hp.\n\n\nplot(mtcars)\n\n\n\n\nAmbiente\n\n\nsessionInfo()\n\n\nR version 4.0.3 (2020-10-10)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods  \n[7] base     \n\nother attached packages:\n[1] readxl_1.3.1\n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.5        compiler_4.0.3    cellranger_1.1.0 \n [4] pillar_1.4.7      tools_4.0.3       digest_0.6.27    \n [7] downlit_0.2.1     lubridate_1.7.9.2 jsonlite_1.7.2   \n[10] evaluate_0.14     tibble_3.0.4      lifecycle_0.2.0  \n[13] lattice_0.20-41   pkgconfig_2.0.3   rlang_0.4.9      \n[16] Matrix_1.3-0      cli_2.2.0         rstudioapi_0.13  \n[19] distill_1.1       yaml_2.2.1        parallel_4.0.3   \n[22] xfun_0.19         stringr_1.4.0     xml2_1.3.2       \n[25] knitr_1.30        generics_0.1.0    vctrs_0.3.6      \n[28] rprojroot_2.0.2   grid_4.0.3        reticulate_1.18  \n[31] glue_1.4.2        fansi_0.4.1       rmarkdown_2.6    \n[34] bookdown_0.21     magrittr_2.0.1    htmltools_0.5.0  \n[37] ellipsis_0.3.1    assertthat_0.2.1  utf8_1.1.4       \n[40] stringi_1.5.3     crayon_1.3.4     \n\n\n\n\n",
      "last_modified": "2020-12-25T18:12:41-03:00"
    },
    {
      "path": "2-Teste_t.html",
      "title": "Teste de Médias - Teste $t$ de Student",
      "description": "Como comparar a diferença de uma mensuração entre dois grupos.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nPressupostos\nIndependência dos Dados\nNormalidade, Tamanho Amostral e Homogeneidade das Variâncias\n\n\\(p\\)-valor e \\(H_0\\)\nTeste \\(t\\) para uma Amostra\nStudent vs Welch\n\nTeste \\(t\\) para duas Amostras Pareadas\nTeste \\(t\\) para duas Amostras Independentes\nReportando o resultado com {papaja}\n\n\nPressupostos\nAntes de avançarmos, é necessário clarificar algo que muitos pesquisadores e cientistas não se atentam e acaba invalidando diversas análises1\nIndependência dos Dados\nPrimeiramente, para quase toda a estatística inferencial2, temos o pressuposto de independência dos dados. Isso é valido para teste \\(t\\), ANOVA, regressões, entre outros… O pressuposto de independência dos dados quer dizer que o valor de uma observação não influencia ou afeta o valor de outras observações. Caso você encontre dados que violam esse pressuposto, é necessário incluir na sua análise. Fontes comuns de não-independência são3:\nDependência Temporal: O valor de uma observação é influenciado pela dimensão temporal. Muito comum em séries temporais, tais como dados financeiros e econômicos. Nesse caso, o ideal é tentar incluir a dimensão temporal na sua análise.\nDependência Espacial: O valor de uma observação é influenciado pela dimensão espacial. Muito comum em dados geoespaciais e georeferenciados. Aqui, o ideal é incorporar a dimensão espacial na sua análise.\n\nDependência temporal e espacial não são os únicos tipos de dependências que existem nos dados. Se as observações tiverem algum tipo de relação que faz com que uma influencie a outra, considere o pressuposto de independência dos dados violado.\nSe esse pressuposto for violado, as técnicas clássicas de Estatística inferencial não serão válidas na sua análise. Sugerimos que você tente remover a fonte de dependência dos dados, recoletar os dados de maneira que não sejam geradas fontes de dependência, ou empregar técnicas que consigam incorporar a fonte de dependência na análise.\nNormalidade, Tamanho Amostral e Homogeneidade das Variâncias\n\n\n\nAqui estão sempre as 3 pedras no sapato das técnicas clássicas de Estatística inferencial. E antes de apresentar elas, vale a pena um pequeno histórico dessas técnicas. Antes do advento de computadores, todos esses cálculos estatísticos e matemáticos eram feitos na mão. Então, como uma maneira de facilitar o cálculo, foram feitas diversas gambiarras derivações matemáticas usando a teoria da probabilidade para computar facilmente um teste estatístico e gerar algo que vocês já devem ter ouvido falar: \\(p\\)-valor. Mais sobre \\(p\\)-valor adiante…\n\nQuem ficou curioso com a história da Estatística. Recomendo um livro de Stephen Stigler intitulado Statistics on the Table: The History of Statistical Concepts and Methods. Eu comprei o meu em um sebo online.\nComo decorrência dessas facilidades, os testes estatísticos possuem fortes pressupostos sobre os dados. E, se esses pressupostos forem violados, a análise pode ser invalidada.\nVoltando às 3 pedras no sapato. Duas delas são realmente pressupostos: normalidade e homogeneidade de variâncias. A restante, tamanho amostral, abordamos em um conteúdo auxiliar.\nNormalidade\nDados normais são dados que seguem uma distribuição Normal, também conhecida por distribuição Gaussiana4. Uma variável distribuída como uma distribuição Normal segue aquela forma clássica de sino. Mais especificamente, esse pressuposto de normalidade se aplica somente à variável dependente. Abaixo um exemplo de variável normal.\n\nVariável dependente é aquela que estamos interessados na nossa análise. É a variável que se altera conforme outras variáveis (chamadas de independentes).\n\n\nlibrary(ggplot2)\nlibrary(dplyr)\ntibble(x = c(-4, 4)) %>% \nggplot(aes(x)) + \n    stat_function(size = 3, col = \"red\", fun = dnorm) +\n  labs(\n    x = NULL,\n    y = NULL\n  )\n\n\n\n\nFigure 1: Distribuição Normal\n\n\n\nComo eu sei que minha variável dependente é Normal?\nMuitos gostam de plotar um gráfico para bisolhar estimar se uma varíavel segue uma distribuição Normal ou não. Somos adeptos de visualizações e usamos constantemente nas nossas análises. Mas, na Estatística, as visualizações são muito boas para mostrar alguma tendência, característica ou peculiaridade dos dados. Agora, para provar algo é necessário um teste estatístico.\nHá dois testes estatísticos para saber se uma variável é distribuída conforme uma distribuição Normal: Komolgorov-Smirnov e Shapiro-Wilk.\nKomolgorov-Smirnov vs Shapiro-Wilk\nAmbos os testes aceitam como input uma variável e dão como output um \\(p\\)-valor. Mas qual usar? Estudos comparativos (Saculinggan & Balase, 2013) de diferentes testes de normalidade demonstram que Shapiro-Wilk é o teste com maior poder estatístico5.\nAbaixo, no R, vamos simular 1.000 observações de uma variável distribuída conforme uma distribuição normal com média 0 e desvio padrão 1. Além disso, vamos simular também 100 observações de uma variável bem longe de ser distribuída como uma distribuição normal. Vamos usar uma variável distribuída conforme uma distribuição Log-Normal. Primeiramente, vamos mostrar graficamente as duas distribuições. Como vocês podem na figura 2, a distribuição Normal tem a forma característica de sino e a distribuição Log-Normal tem uma assimetria para a direita com uma cauda mais alongada.\n\n\ntibble(x = c(-8, 8)) %>% \nggplot(aes(x)) + \n  stat_function(size = 3, col = \"red\", fun = dnorm) +\n  stat_function(size = 3, col = \"blue\", fun = dlnorm) +\n  labs(\n    x = NULL,\n    y = NULL\n  )\n\n\n\n\nFigure 2: Distribuição Normal vs Distribuição Log-Normal\n\n\n\nAgora com as simulações! Na figura 3, é possível ver o histograma das distribuições simuladas. Em vermelho temos o histograma das 1.000 amostragens de uma distribuição Normal e, em azul da distribuição Log-Normal.\n\n\nset.seed(123)\nn_sim <- 1000\nsims <- tibble(\n  normal = rnorm(n_sim),\n  log_normal = rlnorm(n_sim)\n)\n\nggplot(sims) +\n  geom_density(aes(normal, fill = \"Normal\"), alpha = 0.5) +\n  geom_density(aes(log_normal, fill = \"Log-Normal\"), alpha = 0.5) +\n  labs(y = NULL, x = NULL) +\n  scale_fill_manual(name = \"Distribuição\", values = c(\"Normal\" = \"red\", \"Log-Normal\" = \"blue\")) +\n  theme(legend.position = \"bottom\")\n\n\n\n\nFigure 3: Histograma das Simulações\n\n\n\nAgora como fazer um teste de Shapiro-Wilk (shapiro.test) com R. Sobre o \\(p\\)-valor que aparece como resultado do teste, será abordado na próxima sessão. Mas, para agora basta saber que \\(p < 0.05\\) (\\(p\\) menor que 0.05) significa fortes evidências de que a variável testada não segue uma distribuição Normal.\n\n\nshapiro.test(sims$normal)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  sims$normal\nW = 1, p-value = 0.5\n\nshapiro.test(sims$log_normal)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  sims$log_normal\nW = 0.6, p-value <0.0000000000000002\n\nVamos também aproveitar e mostrar como fazer um teste Komolgorov-Smirnof (ks.test). Aqui temos que ser um pouco mais específico pois o teste exige a especificação exata do que comparar. No caso, estamos informando que a distribuição a ser testada contra é uma Normal \"pnorm\" e usamos os valores de média mean() e desvio padrão sd() da distribuição que estamos testando. Lembrando que a definição do \\(p\\)-valor para este teste é a mesma do Shapiro-Wilk.\n\n\nks.test(sims$normal, \"pnorm\", mean(sims$normal), sd(sims$normal))\n\n\n\n    One-sample Kolmogorov-Smirnov test\n\ndata:  sims$normal\nD = 0.01, p-value = 1\nalternative hypothesis: two-sided\n\nks.test(sims$log_normal,  \"pnorm\", mean(sims$log_normal), sd(sims$log_normal))\n\n\n\n    One-sample Kolmogorov-Smirnov test\n\ndata:  sims$log_normal\nD = 0.2, p-value <0.0000000000000002\nalternative hypothesis: two-sided\n\nHomogeneidade das Variâncias\nTeste de Levene\nlibrary(car) # Levene’s test with one independent variable leveneTest(weight ~ group, data = PlantGrowth)\n\\(p\\)-valor e \\(H_0\\)\nTeste \\(t\\) para uma Amostra\nStudent vs Welch\nhttp://daniellakens.blogspot.com/2015/01/always-use-welchs-t-test-instead-of.html\nTeste \\(t\\) para duas Amostras Pareadas\nTeste \\(t\\) para duas Amostras Independentes\nReportando o resultado com {papaja}\n\n\n\nSaculinggan, M., & Balase, E. A. (2013). Empirical power comparison of goodness of fit tests for normality in the presence of outliers. Journal of physics: Conference series, 435, 012041. IOP Publishing.\n\n\nNão estamos exagerando, quando você aprender o que são os pressupostos de cada técnica estatística vai começar a identificar que muitos artigos por aí não estão nem aí para pressupostos.↩︎\nA Estatística pode ser dividida em dois ramos: a descritiva e a inferencial. A Estatistica inferencial é aquela que gera infêrencias a partir dos dados observados sobre o real fenômeno do processo de geração de dados. É a Estatística que vai dos dados observados para as associações prováveis por de trás daquelas observações.↩︎\nAnálises de séries temporais e análises de dados geoespaciais fazem parte de um projeto futuro nosso.↩︎\nHomenagem a Carl Friedrich Gauss, matemático Alemão que viveu entre 1777 e 1855.↩︎\nPoder estatístico é, para uma certa probabilidade de erro tipo I (\\(\\alpha\\)), 1 menos a probabilidade de erro tipo II (\\(1 - \\beta\\)). Veja mais no conteúdo auxiliar de Tamanho da Amostra.↩︎\n",
      "last_modified": "2020-12-25T18:12:44-03:00"
    },
    {
      "path": "3-ANOVA.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:44-03:00"
    },
    {
      "path": "4-Correlacoes.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:45-03:00"
    },
    {
      "path": "5-Regressao_Linear.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:45-03:00"
    },
    {
      "path": "6-Regressao_Logistica.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:46-03:00"
    },
    {
      "path": "aux-Dados_Faltantes.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:46-03:00"
    },
    {
      "path": "aux-Tabelas_para_Publicacao.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:46-03:00"
    },
    {
      "path": "aux-Tabelas.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:47-03:00"
    },
    {
      "path": "aux-Tamanho_Amostra.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2020-12-25T18:12:48-03:00"
    },
    {
      "path": "index.html",
      "title": "Estatística com R",
      "description": "Tutoriais de R para a disciplina de Estatística para alunos de Mestrado e Doutorado da UNINOVE\n",
      "author": [
        {
          "name": "Jose Storopoli",
          "url": "https://scholar.google.com/citations?user=xGU7H1QAAAAJ&hl=en"
        },
        {
          "name": "Leonardo Vils",
          "url": "https://scholar.google.com/citations?user=VO07L9EAAAAJ&hl=en"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nPor que R?\nAulas\nConteúdos Principais\nConteúdos Auxiliares\n\nO que esta disciplina não é\nRStudio na Núvem Gratuito\nProfessores\nComo usar esse conteúdo?\nSlides de Apresentação da Disciplina\n\n\nPor que R?\nR é uma linguagem criada por estatísticos para estatísticos. Possui um vasto ecossistema de bibliotecas e é amplamente usado na ciência e em especial nas ciências aplicadas. Fizemos toda uma argumentação de porque você deve usar R aqui ou clicando no banner superior em “Por que R?”.\nAulas\nConteúdos Principais\n\nPara quem gosta de nomenclaturas chiques: Conteúdos curriculares obrigatórios na formação do futuro pesquisador. Aqui estão coisas importantes que você usará nas suas pesquisas.\nComandos Básicos de R\nTeste de Hipóteses e Teste \\(t\\)\nAnálise de Variância (ANOVA)\nCorrelações\nRegressão Linear\nRegressão Logística\nConteúdos Auxiliares\n\nMais nomenclaturas chiques: Conteúdos extracurriculares facultativos na formação do futuro pesquisador. Aqui estão coisas não-essenciais mas que farão sua vida de pesquisador muito mais fácil.\nDados Faltantes\nTamanho de Amostra e Tamanho de Efeito\nComo ler Tabelas Em Estudos Científicos\nTabelas para Publicação\nO que esta disciplina não é\nNão será coberto conteúdos sobre leitura, manipulação e exportação de dados com R. Para isso recomendo fortemente o livro R para Data Science que pode ser encontrado gratuitamente aqui e possui uma versão impressa em português1.\n\n\n\nFigure 1: R for Data Science\n\n\n\nRStudio na Núvem Gratuito\nClique no ícone abaixo para abrir uma sessão do RStudio no Projeto Binder.\n\nProfessores\nProf. Dr. José Eduardo Storopoli - Currículo Lattes - ORCID - josees@uni9.pro.br\nProf. Dr. Leonardo Vils - Currículo Lattes - ORCID - leonardo.vils@uni9.pro.br\nComo usar esse conteúdo?\nEste conteúdo possui licença livre para uso. Caso queira utilizar o conteúdo para um curso ou estudos, por favor colabore nesse repositório quaisquer aprimorações que foram realizadas.\nPara configurar um ambiente local:\nClone o repositório do GitHub: git clone https://github.com/storopoli/Estatistica.git\nAcesse o diretório: cd Estatistica\nInstale os pacotes necessários: Rscript install.R\nSlides de Apresentação da Disciplina2\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\nNão temos nada a ver com a Amazon. Caso queira comprar em qualquer outra loja fique à vontade, ou algum sebo… Jeff Bezos nem sabe que nós existimos…↩︎\nGeralmente nossos Slides são extremamente enxutos e o real conteúdo fica na nossa fala e na interatividade da apresentação. Provavelmente você não entenderá nada desses slides, mas a sua experiência conosco apresentando-os deverá ser excepcional.\n\n↩︎\n",
      "last_modified": "2020-12-25T18:12:48-03:00"
    },
    {
      "path": "README.html",
      "author": [],
      "contents": "\n\nContents\nEstatística com R\n\nEstatística com R\n\n\n",
      "last_modified": "2020-12-25T18:12:48-03:00"
    }
  ],
  "collections": []
}
